<%- include ('partials/header.ejs') %>
<body class="bod-planner">
    <div id="calendar-container">
        <div id="calendar"></div>
    </div>

    <div id="weather-container">
        <h2>Weather</h2>
        <input type="text" id="city" placeholder="Enter City">
        <button onclick="getWeather()">Search</button>
        <img id="weather-icon" alt="Weather Icon">
        <div id="temperature-info"></div>
        <div id="weather-info"></div>
        <div id="hourly-forecast"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            <% if (userId) { %>
                // Fetch user-specific events
                fetch('/get-events')
                    .then(response => response.json())
                    .then(events => {
                        initializeCalendar(events);
                    })
                    .catch(error => console.error('Error fetching user events:', error));
            <% } else { %>
                // Initialize a generic calendar for non-logged-in users
                initializeCalendar([]);
            <% } %>
        });

        function initializeCalendar(events) {
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                selectable: true,             // Enables selecting a date range
                selectHelper: true,           // Adds a "select" helper during drag
                editable: true,               // Allows events to be dragged and resized
                events: events,               // Display user-specific events or a blank calendar
                select: function(info) {
                    var title = prompt('Enter Event Title:');
                    if (title) {
                        var newEvent = {
                            title: title,
                            start: info.startStr,
                            end: info.endStr,
                            allDay: info.allDay,
                            userId: window.sessionUserId  // Use the userId from the session
                        };

                        // Send new event data to the server
                        fetch('/add-event', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(newEvent)
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                calendar.addEvent(data.event); // Use the event returned from the server
                            } else {
                                alert('Failed to save event.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    }
                    calendar.unselect();
                },
                eventClick: function(info) {
                    const eventId = info.event.id;
                    if (confirm('Are you sure you want to delete this event?')) {
                        deleteEvent(eventId);
                    }
                }
            });

            calendar.render();
        }

        // Add event deletion function (if needed)
        function deleteEvent(eventId) {
            fetch(`/delete-event/${eventId}`, {
                method: 'DELETE',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Event deleted!');
                } else {
                    alert('Failed to delete event.');
                }
            })
            .catch(error => console.error('Error deleting event:', error));
        }
    </script>
</body>
</html>